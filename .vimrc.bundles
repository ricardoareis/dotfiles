" Modeline and Notes {
" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:
" }

" Environment {
"
    " Setup Plug Support {
    set encoding=utf-8
    scriptencoding utf-8
    let g:bundles_dir = '~/.vim/bundles'
    call plug#begin(bundles_dir)
    " }

" }

" Bundles {

    " Color Schema, Fonts & Syntax Plugins {
    Plug 'sainnhe/gruvbox-material'                               " Default color schema
    Plug 'flazz/vim-colorschemes'
    Plug 'powerline/fonts'

    if isdirectory(expand(bundles_dir . '/vim-polyglot/'))
        let g:polyglot_disabled = ['autoindent', 'sensible', 'ftdetect']
    endif

    Plug 'sheerun/vim-polyglot'                                   " Syntax for many different type of files
    " }

    " IDE & Panels Plugins {
    Plug 'mhinz/vim-startify'
    Plug 'preservim/nerdtree',          {'on': 'NERDTreeToggle'}  " Support of file tree bar
    Plug 'mbbill/undotree',             {'on': 'UndotreeToggle'}  " Support of undo tree bar
    Plug 'wfxr/minimap.vim',            {'on': ['MinimapToggle']} " Sublime minimap
    Plug 'junegunn/fzf'                                           " Fuzzy Search w/ FZF
    Plug 'junegunn/fzf.vim'
    Plug 'vim-airline/vim-airline' ",     { 'tag': 'v0.11'}
    Plug 'vim-airline/vim-airline-themes'
    Plug 'bling/vim-bufferline'                                   " Buffer list on cmd bar (integrate vim-airline)
    Plug 'airblade/vim-gitgutter'                                 " Git integration
    Plug 'kshenoy/vim-signature'                                  " Plugin to integrate githunk
    Plug 'voldikss/vim-floaterm'                                  " Float terminal
    Plug 'ricardoareis/vim-which-key'                             " Document keys code (press <Leader>)
    Plug 'machakann/vim-highlightedyank'
    Plug 'junegunn/vim-peekaboo'                                  " Show registers contents visually
    Plug 'vim-scripts/sessionman.vim'                             " Support of open/save/delete sessions
    Plug 'tpope/vim-fugitive'                                     " Git cmds
    Plug 'junegunn/gv.vim'                                        " Browser git log
    Plug 'rhysd/conflict-marker.vim'                              " Handler of git conflict marker
    Plug 'dense-analysis/ale'                                     " Engine for linters and fixers
    Plug 'ricardoareis/vim-indent-guides'                         " Fork with a redir bug solved
    Plug 'kkoomen/vim-doge',            {'do': { -> doge#install() }, 'tag': 'v3.22.0'}
    Plug 'ludovicchabant/vim-gutentags',{'on': 'TagbarToggle'}
    Plug 'skywind3000/gutentags_plus',  {'on': 'TagbarToggle'}
    Plug 'ycm-core/YouCompleteMe'                                 " Engine for auto complete

    if executable('ctags')
        Plug 'majutsushi/tagbar',       {'on': 'TagbarToggle'}    " Support of tagbar
    endif
    " }

    " Writing & Textobjs Plugins{
    Plug 'reedes/vim-textobj-quote'                                      " Extending Vim to better support typographic (‘curly’ quote characters)
    Plug 'kana/vim-textobj-user'                                         " Create your own text objects (deps)
    Plug 'michaeljsmith/vim-indent-object'                               " Text objects for indented blocks of lines (vai,vii)
    Plug 'reedes/vim-textobj-sentence'                                   " Improve sentence object
    Plug 'reedes/vim-wordy',              {'on': 'NextWordy'}            " Supporting of different dictionaries i,e; <F8>
    Plug 'tpope/vim-surround'                                            " Improve surroundings in pairs
    Plug 'godlygeek/tabular'                                             " Formating with tab
    Plug 'wellle/targets.vim'                                            " Many text objects
    Plug 'gabrielelana/vim-markdown',     {'for': ['markdown']}
    Plug 'chrisbra/csv.vim',              {'for': ['csv']}               " Support better csv support
    Plug 'christoomey/vim-sort-motion'                                   " Text objects for sort motion (gsii)
    Plug 'bkad/CamelCaseMotion'                                          " Text objects for CamelCaseMotion (,,w)
    Plug 'dhruvasagar/vim-table-mode'
    Plug 'terryma/vim-expand-region'                                     " Plugin to expand visual selection  with CTRL plus + or -
    Plug 'andymass/vim-matchup'
    Plug 'tpope/vim-abolish'                                             " Support a better abbreviation
    Plug 'gcmt/wildfire.vim'                                             " Support of quick selection, enter select closest text object.
    " }

    " General Programming {
    Plug 'jiangmiao/auto-pairs'                                " Insert or delete brackets, parens, quotes in pair.
    Plug 'scrooloose/nerdcommenter'                            " Intelligent commenter
    Plug 'luochen1990/rainbow'                                 " Different color for open, and close {([])}
    Plug 'ntpeters/vim-better-whitespace'                      " Removed extra whitespaces
    Plug 'editorconfig/editorconfig-vim'
    Plug 'mg979/vim-visual-multi',        {'branch': 'master'} " Support a multiple cursors
    Plug 'vim-test/vim-test'
    Plug 'tpope/vim-dispatch'                                  " Execute cmds asynchronous (vim-test deps)
    Plug 'skywind3000/asyncrun.vim'                            " Execute cmds asynchronous (vim-test strategy)
    Plug 'skywind3000/vim-preview'
    Plug 'AndrewRadev/diffurcate.vim'                          " Separate diffs per file
    " }

    " Snippets {
    Plug 'SirVer/ultisnips'                   " Pack of snippets
    Plug 'honza/vim-snippets'                 " Support a snippets
    "
    " Source support_function.vim to support vim-snippets.
    "
    if filereadable(expand(bundles_dir . '/vim-snippets/snippets/support_functions.vim'))
        source ~/.vim/bundle/vim-snippets/snippets/support_functions.vim
    endif
    " }

    " Langs {
    Plug 'fatih/vim-go',                  { 'for': 'go', 'do': ':GoInstallBinaries'}
    Plug 'rust-lang/rust.vim',            { 'for': ['rust']}
    Plug 'pangloss/vim-javascript',       { 'for': ['javascript']}
    Plug 'sillybun/vim-repl',             { 'for': ['python', 'python3']}
    Plug 'jmcantrell/vim-virtualenv',     { 'for': ['python', 'python3']}            " Support a Python VirtualEnv
    Plug 'jeetsukumaran/vim-pythonsense', { 'for': ['python', 'python3']}            " Add some python text objects
    " }

    " Misc {
    if executable('tmux')
        Plug 'roxma/vim-tmux-clipboard'                         " Yank/Paste tmux split/windows
        Plug 'tmux-plugins/vim-tmux-focus-events'               " Restore vim autocmd events (FocusGained/FocusLost)
    endif
                                                                " there is a bug for terminal buffer, and
                                                                " it should be  accepted by vim in 2015, but.
    Plug 'skanehira/docker-compose.vim',    {'on': ['DockerCompose']}
    Plug 'skanehira/docker.vim',            {'on': ['Docker']}
    " }

    " Improve Vim Experience Plugs {
    Plug 'mox-mox/vim-localsearch'                                   " Allow a register a local pattern, instead of only a global / search
    Plug 'osyo-manga/vim-over'                                       " Plugin to implement replace preview
    Plug 'justinmk/vim-sneak'                                        " testing over easymotion
    Plug 'MattesGroeger/vim-bookmarks'                               " Plugin to manage annotations on lines
    Plug 'wellle/visual-split.vim'                                   " Allow selected text object be viewed in another window
    Plug 'embear/vim-foldsearch'                                     " Search a pattern and close everything as a fold
    Plug 'matze/vim-move'                                            " Move block easily (visual mode + CTRL+J)
    Plug 'chrisbra/NrrwRgn'                                          " Isolating a region to a safe operation (from emacs)
    Plug 'unblevable/quick-scope'
    Plug 'tpope/vim-repeat'                                          " Support to repeat some cmds
    Plug 'ConradIrwin/vim-bracketed-paste'                           " Enable paste without `:set paste` (depends of terminal support)
    Plug 'pedrohdz/vim-yaml-folds',         {'for': ['yml', 'yaml']} " Better folding
    Plug 'elzr/vim-json',                   {'for': ['json']}        " Allow json error handling
    Plug 'mogelbrod/vim-jsonpath',          {'for': ['json']}        " A Vim plugin which provides ways of navigating JSON document buffers
    Plug 'drmikehenry/vim-fixkey'
    Plug 'antoyo/vim-licenses'

    if isdirectory(expand(bundles_dir . '/vim-gh-line/'))
        " these properties must be defined before plugin loaded
        let g:gh_line_map_default = 0
        let g:gh_line_blame_map_default = 0
    endif

    Plug 'ruanyl/vim-gh-line'

    "}

    " All of your Plugs must be added before the following line
    call plug#end()
" }

" Modeline and Notes {
" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:
" }

" Environment {
"
    set nocompatible              " be iMproved, required
    filetype off                  " required

    " Setup Plug Support {
        " The next three lines ensure that the ~/.vim/bundle/ system works
        "set rtp+=~/.vim/bundle/Vundle.vim
        "call vundle#begin()
        call plug#begin('~/.vim/bundle')
    " }

    " let Vundle manage Vundle, required
    "Plug 'VundleVim/Vundle.vim'

" }

" Bundles {

    " General {

    Plug 'scrooloose/nerdtree'                " Support of file tree bar
    Plug 'mbbill/undotree'                    " Support of undo tree bar
    if executable('ctags')
        Plug 'majutsushi/tagbar'              " Support of tagbar
    endif
    Plug 'tpope/vim-repeat'                   " Support to repeat some cmds
    Plug 'tpope/vim-abolish'                  " Support an abbreviation                            - TODO study
    "Plug 'matchit.zip'                       " Extend support of %
    " }

    " Writing {
    Plug 'reedes/vim-textobj-quote'           " Extending Vim to better support typographic
    Plug 'kana/vim-textobj-user'              " Create your own text objects                       - TODO study
    Plug 'kana/vim-textobj-indent'            " Text objects for indented blocks of lines          - TODO study
    Plug 'reedes/vim-textobj-sentence'        " Improve sentence object                            - TODO keycode
    Plug 'reedes/vim-wordy'                   " Supporting of different dictionaries i,e; <F8>
    Plug 'tpope/vim-surround'                 " Improve surroundings in pairs                      - TODO study
    Plug 'jiangmiao/auto-pairs'               " Insert or delete brackets, parens, quotes in pair. - TODO study
    " }

    " General Programming {
    " Pick one of the checksyntax, jslint, or syntastic
    Plug 'tpope/vim-fugitive'                 " Git cmds
    Plug 'junegunn/gv.vim'                    " Browser git log
    Plug 'airblade/vim-gitgutter'             " Git integration                                    - TODO study
    Plug 'rhysd/conflict-marker.vim'          " Handler of git conflict marker
    Plug 'mattn/gist-vim'                     " Support a Gist
    Plug 'scrooloose/nerdcommenter'           " Intelligent commenter
    Plug 'tpope/vim-commentary'               " Intelligent commenter                              - TODO study
    Plug 'godlygeek/tabular'                  " Formating with tab                                 - TODO study
    Plug 'luochen1990/rainbow'                " Different color for open, and close {([])}
    Plug 'dense-analysis/ale'                 " Engine for linters and fixers
    Plug 'ntpeters/vim-better-whitespace'     " Removed extra whitespaces
    Plug 'editorconfig/editorconfig'          " Support a editorconfig
    Plug 'jmcantrell/vim-virtualenv'          " Support a Python VirtualEnv
    Plug 'nathanaelkane/vim-indent-guides'    " Support a indent guides
    Plug 'terryma/vim-multiple-cursors'       " Support a multiple cursors
    Plug 'sillybun/vim-repl'
    "
    " }

    " Snippets & AutoComplete {
    Plug 'SirVer/ultisnips'                   " Pack of snippets
    Plug 'honza/vim-snippets'                 " Support a snippets
    Plug 'Valloric/YouCompleteMe'             " Engine for auto complete
    "
    " Source support_function.vim to support vim-snippets.
    "
    if filereadable(expand("~/.vim/bundle/vim-snippets/snippets/support_functions.vim"))
        source ~/.vim/bundle/vim-snippets/snippets/support_functions.vim
    endif
    " }

    " Langs {
    Plug 'fatih/vim-go'
    Plug 'rust-lang/rust.vim'
    Plug 'pangloss/vim-javascript'
    " }

    " Misc {
    Plug 'elzr/vim-json'
    Plug 'groenewege/vim-less'
    Plug 'roxma/vim-tmux-clipboard'
    Plug 'tmux-plugins/vim-tmux-focus-events'
    Plug 'ConradIrwin/vim-bracketed-paste'
    Plug 'benmills/vimux'
    " }

    " Improve Vim Experience Plugs {
    Plug 'sainnhe/gruvbox-material'           " Default color schema
    Plug 'kshenoy/vim-signature'              " TODO sym overwrited by vim-gitgutter
    Plug 'terryma/vim-expand-region'          " TODO document keycode
    Plug 'junegunn/fzf'                       " Fuzzy Search w/ FZF
    Plug 'junegunn/fzf.vim'                   " TODO customization
    "Plug 'liuchengxu/vim-clap'                " TODO overlap fzf
    "Plug 'liuchengxu/vista.vim'               " TODO overlap nerdtree ctags-bar
    "Plug 'thaerkh/vim-workspace'              " TODO removed after implement auto save!?
    Plug 'chrisbra/csv.vim'                   " Support better csv support
    Plug 'mox-mox/vim-localsearch'            " Allow a register a local pattern, instead of only a global / search
    Plug 'sheerun/vim-polyglot'               " Syntax for many different type of files
    Plug 'liuchengxu/vim-which-key'           " Document keyscode (press <Leader>)
    Plug 'vim-scripts/sessionman.vim'         " Support of open/save/delete sessions
    Plug 'osyo-manga/vim-over'                " Support of replace preview - TODO study
    Plug 'gcmt/wildfire.vim'                  " Support of quick selection - TODO study
    Plug 'powerline/fonts'
    Plug 'bling/vim-bufferline'
    Plug 'vim-airline/vim-airline'
    Plug 'vim-airline/vim-airline-themes'
    "Plug 'easymotion/vim-easymotion'
    Plug 'justinmk/vim-sneak'
    Plug 'flazz/vim-colorschemes'
    "https://github.com/jaxbot/semantic-highlight.vim
    "Plug '907th/vim-auto-save'
    Plug 'voldikss/vim-floaterm'
    Plug 'MattesGroeger/vim-bookmarks'        " TODO: keycode e remover o outro plugin de mark
    "}

    " All of your Plugs must be added before the following line
    "call vundle#end()            " required
    "filetype plugin indent on    " required
    call plug#end()
" }
